version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: stock-mysql
    environment:
      MYSQL_ROOT_PASSWORD: tyn192659
      MYSQL_DATABASE: payment
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      # 将 SQL 文件挂载到容器的初始化目录
      - ./sql/create.sql:/docker-entrypoint-initdb.d/01-create.sql
      - ./sql/createNacos.sql:/docker-entrypoint-initdb.d/02-createNacos.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nacos:
    image: nacos/nacos-server:v2.2.3
    container_name: stock-nacos
    environment:
      - MODE=standalone
      - JVM_XMS=512m
      - JVM_XMX=512m
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=tyn192659
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2.5
    container_name: stock-redis
    command: redis-server --requirepass tyn192659
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  stock-service:
    build: .
    container_name: stock-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/payment
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=tyn192659
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=tyn192659
      - SPRING_CLOUD_NACOS_DISCOVERY_SERVER-ADDR=nacos:8848
    ports:
      - "8080:8080"
      - "20880:20880"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      nacos:
        condition: service_healthy
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  redis-data:

networks:
  stock-network:
    driver: bridge